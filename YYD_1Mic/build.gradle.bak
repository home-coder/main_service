apply plugin: 'com.android.application'

def ver = "ext_five"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        applicationId "com.yongyida.robot.voice"
        minSdkVersion 16
        targetSdkVersion 22

        //dex突破65535的限制
        multiDexEnabled true

        dexOptions {
            javaMaxHeapSize "4g"
            preDexLibraries = false
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    sourceSets.main {
        java.srcDirs = ['src/main/java', 'src/main/' + ver + '/java']
        res.srcDir "src/main/res"
        jni.srcDirs = []
        jniLibs.srcDirs = ['src/main/libs', 'src/main/' + ver + '/libs']
        assets.srcDir "src/main/assets"
        manifest.srcFile "src/main/AndroidManifest.xml"
    }

    signingConfigs {
        MTK {
            if (file("src/main/sign/MTK.sign").exists()) {
                Properties props = new Properties()
                props.load(new FileInputStream(file("src/main/sign/MTK.sign")))
                storeFile file(props['RELEASE_STORE_FILE'])
                storePassword props['RELEASE_STORE_PASSWORD']
                keyAlias props['RELEASE_KEY_ALIAS']
                keyPassword props['RELEASE_KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        mtkrelease {
            signingConfig signingConfigs.MTK
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
def getLayoutLibPath() {
    return "${android.getSdkDirectory().getAbsolutePath()}" + "/platforms/" +
            android.compileSdkVersion + "/data/layoutlib.jar"
}

dependencies {
    provided files(getLayoutLibPath())
    compile fileTree(dir: 'src/main/libs', include: ['*.jar'])
    compile fileTree(dir: "src/main/" + ver + "/libs", include: ['*.jar'])

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    testCompile 'junit:junit:4.12'
}
