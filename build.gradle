// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'buildshell/depend.gradle'

buildscript {
    repositories {
        jcenter()
        // Required because retrolambda is on maven central
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.android.tools.build:gradle-experimental:0.7.3'

        // Jack 是 java Android Compiler Kit 的缩写，它可以将 Java 代码直接编译为 Dalvik 字节码，
        // 并负责 Minification, Obfuscation, Repackaging, Multidexing, Incremental compilation。
        // 它试图取代 javac/dx/proguard/jarjar/multidex 库等工具。
        // Android 终于有了自己的 Java 编译器。Android7.0（API24）在对JAVA8的支持上，需要使用新的编译器。

        // android 迎来了Java 8，要想使用Java 8的话必须使用Jack编译，android-apt只支持javac编译
        // 而annotationProcessor既支持javac同时也支持jack编译。

        // APT is nothing else but a plugin (i.e. APT = "annotation processing tool").
        // This plugin is no longer needed as the new annotationProcessor build step is built into
        // the android gradle build script. In practice, just replace "APT" with "annotationProcessor"

        //classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
    }
}

allprojects {
    repositories {
        /*
        jcenter 是一个 mavenCentral 的超集，jcenter 还包含了其他 maven 包
        jcenter 具有更好的 cdn，默认支持 https，这个对于谷歌有巨大吸引力
        bintray（jcenter 的服务提供商）表示 jcenter 具有更好的性能
        有数据表明 bintray jcenter 占用更少的本地缓存空间
        更好的交互界面，可以从 jcenter 向 mavenCentral 同步包（下面两个平台的使用教程将会证实这一点）
        笔者亲测，在bintray上发布包到jcenter，在易用性上，的确比，在sonatype发布到到mavenCentral好得多。
         */
        jcenter()
        jcenter { url "http://jcenter.bintray.com" }

        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/'}
        // 可以把 GitHub 项目发布成 maven 库
        maven { url "https://jitpack.io" }

        // 该项目的全局设置
        //apply plugin: 'me.tatarka.retrolambda'
    }

    tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {
        //options.debug = true
        //options.compilerArgs = ['-Xlint:all']
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


//2.2-----8
//2.3.1---9
//2.3.3---10[2.3.6;2.3.7]
//3.0-----11
//3.1-----12
//3.2-----13
//4.0-----14
//4.0.3---15
//4.1.2---16
//4.2.2---17
//4.3.1---18
//4.4.2---19
//4.4.4---19
//4.4W.2--20
//5.0.1---21
//5.1.1---22
//6.0-----23
//7.0-----24
