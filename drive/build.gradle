apply plugin: 'com.android.library'
apply from: '../buildshell/library.gradle'

def platform = ""
def robot_ver = ""
if(project.hasProperty("mainservice.config")){
    // 配置文件路径
    def config = project.property("mainservice.config");
    if(file(config).exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file(config)))
        platform = props['platform']
        robot_ver = props['robot_ver']
    }
}

android{
    sourceSets.main {
        aidl.srcDirs = ['src/main/aidl', "src/main/ext_src/" + platform + "/motor/aidl"]
        java.srcDirs = ["src/main/java",
                        "src/main/ext_src/" + platform + "/motor/java",
                        "src/main/ext_src/" + platform + "/control/" + robot_ver + "/java" ]
        res.srcDir "src/main/res"
        //disable automatic ndk-build call
        jni.srcDirs = []
        jniLibs.srcDirs = ['src/main/libs',
                           'src/main/ext_src/' + platform + '/motor/libs',
                           'src/main/ext_src/' + platform + "/control/" + robot_ver + '/libs' ]
        manifest.srcFile "src/main/AndroidManifest.xml"
        assets.srcDir "src/main/assets"
        resources.srcDirs = ['src/main/resources/']
    }
}

def getLayoutLibPath() {
    return "${android.getSdkDirectory().getAbsolutePath()}" + "/platforms/" +
            android.compileSdkVersion + "/data/layoutlib.jar"
}

//compile 'group:module:version'
dependencies {
    provided files(getLayoutLibPath())
    compile fileTree(include: ['*.jar'], dir: 'src/main/libs')
    compile fileTree(dir: "src/main/ext_src/" + platform + "/motor/libs", include: ['*.jar'])
    compile fileTree(dir: "src/main/ext_src/" + platform + "/control/" + robot_ver + "/libs", include: ['*.jar'])

    def presentationTest = rootProject.ext.presentationTest
    androidTestCompile(presentationTest.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    def dataTest = rootProject.ext.dataTest
    testCompile dataTest.junit

    def publicDepend = rootProject.ext.publicDepend
    compile publicDepend.support
    compile publicDepend.appcompat

}
